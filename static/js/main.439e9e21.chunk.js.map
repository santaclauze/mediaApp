{"version":3,"sources":["components/Container.js","components/Header.js","components/MoviePlayer.js","components/Movie.js","components/Carousel.js","components/Loader.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["Container","styled","div","_templateObject","props","concat","mediaBreakpointUp","theme","Header","state","isOpen","handleClick","_this","onRefreshClick","handleToggle","setState","this","isLoading","react_default","a","createElement","v4_esm","components_Container","className","color","onClick","id","disabled","react_fontawesome_index_es","icon","cn","placement","target","toggle","React","Component","Wrapper","MoviePlayer_templateObject","PlayerWrapper","_templateObject2","CloseMovie","Close","_templateObject3","MoviePlayer","_this$props","close","movieContent","motion_lib","duration","motion","timingFunction","onDismiss","controls","autoPlay","height","width","onEnded","src","url","type","format","withTheme","MovieWrapper","Movie_templateObject","MovieImg","Img","Movie_templateObject2","MovieUnstyled","movieOpen","movieBase64","movieHover","handleCloseVideo","updatePreviouslyWatchedList","data","handleOpenVideo","handleOnMouseOver","handleOnMouseLeave","imageBase64","_this2","console","log","localStorage","getItem","fetch","images","then","r","blob","Promise","res","rej","fl","FileReader","onload","e","result","onerror","readAsDataURL","replace","setItem","_this$props2","_this$state","react","onMouseLeave","onMouseOver","alt","title","description","parentalRatings","rating","categories","map","category","index","key","ReactDOM","createPortal","components_MoviePlayer","contents","document","body","Movie","Movie_templateObject3","mediaBreakpointDown","CarouselUnstyled","movies","settings","infinite","dots","speed","draggable","slidesToShow","slidesToScroll","responsive","breakpoint","parseInt","lg","lib_default","Object","assign","movie","components_Movie","Carousel","Carousel_templateObject","LoadingIcon","FontAwesomeIcon","Loader_templateObject","Loader","App","previouslyWatchedMovieIds","handleRefreshClick","fetchData","json","saveData","catch","error","updateFromLocalStorage","locallyStoredPreviouslyWatchedMovies","split","length","getPreviouslyWatchedMovies","previouslyWatchedMovies","watchedMovieId","push","handleUpdatePreviouslyWatched","unshift","undefined","find","previouslyWatchedMovie","splice","Header_Header","components_Loader","components_Carousel","entries","Boolean","window","location","hostname","match","mediaAppTheme","makeTheme","$body-bg","$navbar-padding-x","$navbar-padding-y","$headings-color","$font-size-h2","createMakeTheme","toMakeTheme","makeThemeMotion","makeThemeMediaApp","library","add","faRedo","faSpinner","render","BootstrapProvider_default","injectGlobal","reset","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.439e9e21.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { mediaBreakpointUp } from '@bootstrap-styled/css-mixins/lib/breakpoints';\n\nconst Container = styled.div`\n    ${props => `\n        margin-right: auto;\n        margin-left: auto;\n        padding-left: 10px;\n        padding-right: 10px;\n        ${mediaBreakpointUp('sm', props.theme['$grid-breakpoints'],`\n            width: 540px;\n        `)}\n        ${mediaBreakpointUp('md', props.theme['$grid-breakpoints'],`\n            width: 760px;\n        `)}\n        ${mediaBreakpointUp('lg', props.theme['$grid-breakpoints'],`\n            width: 960px;\n        `)}\n        ${mediaBreakpointUp('xl', props.theme['$grid-breakpoints'],`\n            width: 1150px;\n        `)}\n    `}\n`;\n\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cn from 'classnames';\n\nimport {\n  Navbar,\n  Button,\n  H1,\n  Tooltip,\n} from '@bootstrap-styled/v4';\n\nimport Container from './Container';\n\nexport default class Header extends React.Component {\n\n  static propTypes = {\n    onRefreshClick: PropTypes.func,\n    isLoading: PropTypes.bool\n  };\n\n  state = {\n    isOpen: false,\n  }\n\n  handleClick = () => {\n    this.props.onRefreshClick()\n  }\n\n  handleToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n\n\n  render() {\n    const { isOpen } = this.state;\n    const { isLoading } = this.props;\n\n    return (\n      <Navbar>\n          <Container className=\"d-flex flex-row justify-content-between\">\n            <H1>Home</H1>\n            <Button\n                color=\"success\"\n                onClick={this.handleClick}\n                id=\"tooltip-button\"\n                disabled={isLoading}\n            >\n              <FontAwesomeIcon icon=\"redo\" className={cn(isLoading && 'fa-spin')}/>\n            </Button>\n            <Tooltip\n              placement=\"left\"\n              isOpen={isOpen}\n              target=\"tooltip-button\"\n              toggle={this.handleToggle}\n            >\n              Refresh movie list.\n            </Tooltip>\n          </Container>\n      </Navbar>\n    );\n  }\n}\n","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { withTheme } from 'styled-components';\nimport {\n  Close,\n} from '@bootstrap-styled/v4';\nimport { FadeIn } from '@bootstrap-styled/motion';\n\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100vh;\n  background-color:rgba(0,0,0,0.6);\n  display: flex;\n  overflow: hidden;\n  z-index: 9999;\n`\n\nconst PlayerWrapper = styled.div`\n  margin: auto;\n  position: relative;\n`\n\nconst CloseMovie = styled(Close)`\n  position: absolute;\n  top: 15px;\n  right: 25px;\n  z-index: 9999;\n`;\n\nclass MoviePlayer extends React.Component {\n\n  static propTypes = {\n    close: PropTypes.func,\n    theme: PropTypes.object,\n    movieContent: PropTypes.object,\n  };\n\n  render() {\n    const { theme, close, movieContent } = this.props;\n\n    return (\n      <FadeIn\n        duration={theme.motion['$motion-duration']['xs']}\n        timingFunction={theme.motion['$motion-timing-function']['easeIn']}\n      >\n        <Wrapper>\n          <PlayerWrapper>\n            <CloseMovie onDismiss={close} />\n            <video controls autoPlay height=\"500\" width=\"900\" onEnded={close}>\n              <source src={movieContent.url} type={`video/${movieContent.format}`} />\n            </video>\n          </PlayerWrapper>\n        </Wrapper>\n      </FadeIn>\n    );\n  }\n}\n\nexport default withTheme(MoviePlayer);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport {\n  Img,\n  P,\n  Badge,\n  Small,\n  Hr\n} from '@bootstrap-styled/v4';\nimport { mediaBreakpointDown } from '@bootstrap-styled/css-mixins/lib/breakpoints';\n\nimport MoviePlayer from './MoviePlayer';\n\n// const MovieSelect = styled.div`\n//   position: absolute;\n//   top: 0;\n//   bottom: 0;\n//   left: 0;\n//   right: 0;\n//   background-color: red;\n// `;\n\nconst MovieWrapper = styled.div`\n  width: 215px;\n  height: 315px;\n`;\n\nconst MovieImg = styled(Img)`\n  min-height: 250px;\n`;\n\nclass MovieUnstyled extends React.Component {\n\n  static propTypes = {\n    data: PropTypes.object,\n    className: PropTypes.string,\n    updatePreviouslyWatchedList: PropTypes.func,\n  };\n\n  state = {\n    movieOpen : false,\n    movieBase64: null,\n    movieHover: false,\n  };\n\n  componentWillMount() {\n    console.log(this.props)\n    let imageBase64;\n    if(localStorage.getItem(this.props.data.id) === null) {\n      fetch(`https://cors-anywhere.herokuapp.com/${this.props.data.images[0].url}`)\n        .then(r => r.blob())\n        .then(blob => new Promise((res,rej) => {\n          let fl = new FileReader();\n          fl.onload = e => res(e.target.result);\n          fl.onerror=rej;\n          fl.readAsDataURL(blob)\n        }))\n        .then(result => {\n          imageBase64 = result.replace('data:text/html', 'data:image/jpeg');\n          this.setState({\n            movieBase64: imageBase64,\n          });\n          localStorage.setItem(this.props.data.id, imageBase64)\n        })\n    } else {\n      this.setState({\n        movieBase64: localStorage.getItem(this.props.data.id),\n      })\n    }\n  }\n\n  handleCloseVideo = () => {\n    const { updatePreviouslyWatchedList, data } = this.props;\n    this.setState({\n      movieOpen: false\n    });\n    updatePreviouslyWatchedList && updatePreviouslyWatchedList(data)\n  };\n\n  handleOpenVideo = () => {\n    this.setState({\n      movieOpen: true\n    })\n  };\n\n  handleOnMouseOver = () => {\n    this.setState({\n      movieHover: true,\n    })\n  }\n\n  handleOnMouseLeave = () => {\n    this.setState({\n      movieHover: false,\n    })\n  }\n\n  render() {\n    const { data, className } = this.props;\n    const { movieBase64, movieHover } = this.state;\n\n    return (\n      <Fragment>\n        <MovieWrapper\n          className={cn(className, 'movie-wrapper cursor-pointer')}\n          onClick={this.handleOpenVideo}\n          onMouseLeave={this.handleOnMouseLeave}\n          onMouseOver={this.handleOnMouseOver}\n        >\n          <MovieImg\n            src={movieBase64}\n            alt={data.id}\n            className=\"cursor-pointer movie-image\"\n          />\n          {movieHover && (\n            <div className=\"movie-description text-white\">\n              <P>{data.title}</P>\n              <Small>{data.description}</Small>\n              <Hr />\n              <Small>Rating: {data.parentalRatings[0].rating}</Small>\n              <Hr />\n              {data.categories.map((category, index) =>\n                <Badge\n                  className=\"ml-1\"\n                  key={index}\n                >\n                  {category.title}\n                </Badge>\n              )}\n            </div>\n          )}\n          <P className=\"text-white\">{data.title}</P>\n        </MovieWrapper>\n        {this.state.movieOpen ? ReactDOM.createPortal(\n          <MoviePlayer close={this.handleCloseVideo} movieContent={data.contents[0]} />,\n          document.body\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nconst Movie = styled(MovieUnstyled)`\n  ${props => `\n    &.movie-wrapper {\n      position: relative;\n  \n      .movie-description {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n    }\n    ${mediaBreakpointDown('sm', props.theme['$grid-breakpoints'], `\n      &.movie-wrapper, .movie-image, .movie-description {\n        max-width: 175px;\n      }\n    `)}\n  `}\n`;\n\nexport default Movie;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from \"react-slick\";\nimport Movie from './Movie';\nimport styled, { withTheme } from 'styled-components';\n\nclass CarouselUnstyled extends React.Component {\n\n  static propTypes = {\n    movies: PropTypes.array,\n    updatePreviouslyWatchedList: PropTypes.func,\n      theme: PropTypes.object,\n  };\n\n  render() {\n    const { movies, theme } = this.props;\n\n    const settings = {\n      infinite: false,\n      dots: true,\n      speed: 500,\n      draggable: false,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n        responsive: [\n            {\n                breakpoint: parseInt(theme['$grid-breakpoints'].lg, 10),\n                settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 3,\n                }\n            }\n        ]\n    };\n\n    return (\n      <Slider {...settings} className={this.props.className}>\n        {movies && movies.map((movie, index) =>\n          <Movie\n            updatePreviouslyWatchedList={this.props.updatePreviouslyWatchedList}\n            data={movie}\n            key={index}\n          />\n        )}\n      </Slider>\n    );\n  }\n}\n\nconst Carousel = styled(CarouselUnstyled)`\n  .slick-arrow {\n    z-index: 9998\n    &.slick-prev {\n      top: 40%;\n    }\n    &.slick-next {\n      top: 40%;\n    }\n  }\n`;\n\nexport default withTheme(Carousel);\n","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst LoadingIcon = styled(FontAwesomeIcon)`\n  color: #08080A;\n`;\nconst Loader = () => (\n  <LoadingIcon icon=\"spinner\" className=\"fa-pulse text-white fa-3x\" />\n);\n\nexport default Loader;\n","import React from 'react';\n\nimport {\n  Hr,\n  H2,\n} from '@bootstrap-styled/v4';\n\nimport Header from './components/Header';\nimport Carousel from './components/Carousel';\nimport Loader from './components/Loader';\nimport Container from './components/Container';\nimport Movie from './components/Movie';\n\nexport default class App extends React.Component {\n\n  state = {\n    data: null,\n    previouslyWatchedMovieIds: [],\n    isLoading: false,\n  };\n\n  componentWillMount() {\n    this.fetchData()\n    this.updateFromLocalStorage()\n  }\n\n  handleRefreshClick = () => {\n    this.fetchData()\n  }\n\n  fetchData = () => {\n    this.setState({\n      isLoading: true,\n    });\n    fetch('https://demo2697834.mockable.io/movies')\n      .then(res => res.json())\n      .then(body => this.saveData(body))\n      .catch(error => console.error(error));\n  };\n\n  saveData = (data) => {\n    this.setState({\n      data: data,\n      isLoading: false,\n    });\n  };\n\n  updateFromLocalStorage = () => {\n    const locallyStoredPreviouslyWatchedMovies = localStorage.getItem('previouslyWatched');\n    if (locallyStoredPreviouslyWatchedMovies !== null && locallyStoredPreviouslyWatchedMovies.split(',').length > 0) {\n      console.log(locallyStoredPreviouslyWatchedMovies.split(','));\n      this.setState({\n        previouslyWatchedMovieIds: locallyStoredPreviouslyWatchedMovies.split(',')\n      })\n    }\n  }\n\n  getPreviouslyWatchedMovies = (movies) => {\n    const { previouslyWatchedMovieIds } = this.state;\n    const previouslyWatchedMovies = [];\n    previouslyWatchedMovieIds.map(watchedMovieId =>\n      movies.map(movie => { if(watchedMovieId === movie.id) {\n        previouslyWatchedMovies.push(movie)\n      }})\n    )\n    return previouslyWatchedMovies;\n  };\n\n  handleUpdatePreviouslyWatched = (movie) => {\n    const previouslyWatchedMovieIds = this.state.previouslyWatchedMovieIds;\n    switch(previouslyWatchedMovieIds.length) {\n      case 0:\n        previouslyWatchedMovieIds.push(movie.id);\n        this.setState({\n          previouslyWatchedMovieIds: previouslyWatchedMovieIds\n        });\n        localStorage.setItem('previouslyWatched', previouslyWatchedMovieIds);\n        break;\n      case 1:\n        if(movie.id !== previouslyWatchedMovieIds[0]) {\n          previouslyWatchedMovieIds.unshift(movie.id);\n          this.setState({\n            previouslyWatchedMovieIds: previouslyWatchedMovieIds\n          });\n          localStorage.setItem('previouslyWatched', previouslyWatchedMovieIds);\n        }\n        break;\n      default:\n        const movieNeverWatched = previouslyWatchedMovieIds.find(previouslyWatchedMovie => movie.id === previouslyWatchedMovie)\n        if(movieNeverWatched === undefined) {\n          previouslyWatchedMovieIds.unshift(movie.id);\n          this.setState({\n            previouslyWatchedMovieIds: previouslyWatchedMovieIds\n          });\n          localStorage.setItem('previouslyWatched', previouslyWatchedMovieIds)\n        } else {\n          previouslyWatchedMovieIds.map((previouslyWatchedMovie, index) => {\n            if (movie.id === previouslyWatchedMovie) {\n              previouslyWatchedMovieIds.splice(index, index+1);\n              previouslyWatchedMovieIds.unshift(movie.id);\n              this.setState({\n                previouslyWatchedMovieIds: previouslyWatchedMovieIds\n              });\n              localStorage.setItem('previouslyWatched', previouslyWatchedMovieIds)\n            }\n          })\n        }\n    }\n  };\n\n  render() {\n    const { data, isLoading } = this.state;\n    return (\n      <div className=\"App\">\n        <Header onRefreshClick={this.handleRefreshClick} isLoading={isLoading} />\n        {isLoading ?\n            <div className=\"d-flex align-items-center justify-content-around\">\n              <Loader/>\n            </div>\n            :\n          <Container>\n            <div className=\"d-none d-sm-block\">\n              <H2>Featured Movies</H2>\n              <Carousel movies={data && data.entries} updatePreviouslyWatchedList={this.handleUpdatePreviouslyWatched}/>\n              <Hr className=\"my-5\" />\n              <H2>Previously Watched Movies</H2>\n              <Carousel movies={this.getPreviouslyWatchedMovies(data && data.entries)} updatePreviouslyWatchedList={this.handleUpdatePreviouslyWatched} />\n            </div>\n            <div className=\"d-sm-none\">\n              <H2>Featured Movies</H2>\n              <div className=\"d-flex flex-wrap justify-content-around\">\n                {data.entries.map(movie => <Movie data={movie} updatePreviouslyWatchedList={this.handleUpdatePreviouslyWatched} />)}\n              </div>\n            </div>\n          </Container>\n        }\n        </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { makeTheme } from 'bootstrap-styled/lib/theme/index';\nimport makeThemeMotion from '@bootstrap-styled/motion/lib/theme';\nimport createMakeTheme, { toMakeTheme } from 'bootstrap-styled/lib/utils';\n\nconst mediaAppTheme = makeTheme({\n  '$body-bg': '#1E2129',\n  '$navbar-padding-x': '2rem',\n  '$navbar-padding-y': '2rem',\n  '$headings-color': 'white',\n  '$font-size-h2': '20px',\n});\n\nexport const makeThemeMediaApp = createMakeTheme([\n  toMakeTheme(mediaAppTheme),\n  toMakeTheme(makeThemeMotion),\n\n]);\n\nconst theme =  makeThemeMediaApp();\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BootstrapProvider from '@bootstrap-styled/provider/lib/BootstrapProvider';\n\n// react-slick css\nimport \"slick-carousel/slick/slick.scss\";\nimport \"slick-carousel/slick/slick-theme.scss\";\n\n// font-awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faRedo, faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\n\n// font-awesome lib\nlibrary.add(faRedo)\nlibrary.add(faSpinner)\n\nReactDOM.render(<BootstrapProvider injectGlobal reset theme={theme}><App /></BootstrapProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}